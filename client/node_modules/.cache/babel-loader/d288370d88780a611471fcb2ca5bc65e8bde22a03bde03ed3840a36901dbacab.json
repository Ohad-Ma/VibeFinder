{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\vibefinder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moods = [\"happy\", \"sad\", \"angry\", \"calm\", \"curious\", \"bored\"];\nconst moodEmojis = {\n  happy: \"😊\",\n  sad: \"😢\",\n  angry: \"😠\",\n  calm: \"😌\",\n  curious: \"🧐\",\n  bored: \"😐\"\n};\nfunction App() {\n  _s();\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleMoodClick = mood => {\n    setSelectedMood(mood);\n    setPlaces([]);\n    setError(null);\n    getLocationAndFetchPlaces(mood);\n  };\n  const getLocationAndFetchPlaces = mood => {\n    if (!navigator.geolocation) {\n      setError(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    setLoading(true);\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const lng = position.coords.longitude;\n      fetch(`/get_places?lat=${lat}&lng=${lng}&keyword=${mood}`).then(res => res.json()).then(data => {\n        if (data.results) {\n          setPlaces(data.results);\n        } else {\n          setError(\"No results found.\");\n        }\n      }).catch(() => {\n        setError(\"Failed to fetch places.\");\n      }).finally(() => {\n        setLoading(false);\n      });\n    }, () => {\n      setError(\"Unable to retrieve your location.\");\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How do you feel today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-buttons\",\n      children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodClick(mood),\n        className: \"mood-button\",\n        children: [moodEmojis[mood], \" \", mood]\n      }, mood, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), selectedMood && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You're feeling \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [moodEmojis[selectedMood], \" \", selectedMood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading places nearby...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), places.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Suggested places:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: places.map((place, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: place.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eKsmut31lE4OvI4hQUUc4b2izx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","moods","moodEmojis","happy","sad","angry","calm","curious","bored","App","_s","selectedMood","setSelectedMood","places","setPlaces","loading","setLoading","error","setError","handleMoodClick","mood","getLocationAndFetchPlaces","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","fetch","then","res","json","data","results","catch","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","color","length","place","i","name","_c","$RefreshReg$"],"sources":["D:/Work/vibefinder/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst moods = [\"happy\", \"sad\", \"angry\", \"calm\", \"curious\", \"bored\"];\nconst moodEmojis = {\n  happy: \"😊\",\n  sad: \"😢\",\n  angry: \"😠\",\n  calm: \"😌\",\n  curious: \"🧐\",\n  bored: \"😐\"\n};\n\nfunction App() {\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleMoodClick = (mood) => {\n    setSelectedMood(mood);\n    setPlaces([]);\n    setError(null);\n    getLocationAndFetchPlaces(mood);\n  };\n\n  const getLocationAndFetchPlaces = (mood) => {\n    if (!navigator.geolocation) {\n      setError(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n\n    setLoading(true);\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n\n        fetch(`/get_places?lat=${lat}&lng=${lng}&keyword=${mood}`)\n          .then((res) => res.json())\n          .then((data) => {\n            if (data.results) {\n              setPlaces(data.results);\n            } else {\n              setError(\"No results found.\");\n            }\n          })\n          .catch(() => {\n            setError(\"Failed to fetch places.\");\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      },\n      () => {\n        setError(\"Unable to retrieve your location.\");\n        setLoading(false);\n      }\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>How do you feel today?</h1>\n      <div className=\"mood-buttons\">\n        {moods.map((mood) => (\n          <button\n            key={mood}\n            onClick={() => handleMoodClick(mood)}\n            className=\"mood-button\"\n          >\n            {moodEmojis[mood]} {mood}\n          </button>\n        ))}\n      </div>\n\n      {selectedMood && <h2>You're feeling <em>{moodEmojis[selectedMood]} {selectedMood}</em></h2>}\n      {loading && <p>Loading places nearby...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {places.length > 0 && (\n        <div className=\"result\">\n          <h3>Suggested places:</h3>\n          <ul>\n            {places.map((place, i) => (\n              <li key={i}>{place.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}